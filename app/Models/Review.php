<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\DB;

class Review extends Model
{
    protected $table = 'reviews';

    public static function getAll()
    {
        return self::orderBy('status')->orderBy('created_at', 'desc')->get();
    }

    public static function getAllProductById($id = 0)
    {
        $items = self::where('product_id', $id)->where('status', 1)->where('review_id', 0)
            ->orderBy('date')->get();
        foreach ($items as $item) {
            $item->getSubReview();
        }
        return $items;
    }

    public static function countProductReviews($id = 0)
    {
        return self::where('product_id', $id)->where('status', 1)->count();
    }

    public static function deleteById($id)
    {
        return self::where('id', $id)->orWhere('review_id',$id)->delete();
    }

    public static function changeStatusById($id)
    {
        return self::whereId($id)->first()->switchStatus()->update();
    }

    /**
     * @return int count of reviews which has status non publicated
     */
    public static function noneActivated()
    {
        return self::where('status', 0)->count();
    }

    public static function create(array $attributes = [])
    {
//        dd($attributes);
        return self::insert($attributes); // TODO: Change the autogenerated stub
    }

    public function switchStatus()
    {
        $this->status = ($this->status)? 0 : 1;
        return $this;
    }

    public function getSubReview()
    {
        $subReview = self::where('status', 1)->where('review_id', $this->id)
            ->orderBy('date')->get();
        $this->subReview = (count($subReview))?$subReview:NULL;
    }
}
